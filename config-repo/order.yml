server:
  port: 9090

spring:
  webflux:
    base-path: orders
  config:
    activate:
      on-profile: h2
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/auth/realms/hcbox
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        use_sql_comments: true
    defer-datasource-initialization: true
  cloud:
    stream:
      bindings:
        orderEventProcessor-in-0:
          destination: order-events-v1
          group: order-service
          content-type: application/*+avro
          consumer.use-native-encoding: true
      kafka:
        binder:
          brokers: localhost
          defaultBrokerPort: 9092
          configuration:
            acks: all
            schema.registry.url: http://localhost:8081

spring.kafka:
  properties:
    schema.registry.url: http://localhost:8081
  producer:
    key-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
    value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
  consumer:
    key-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
    value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer

  datasource:
    initialize: true
    driverClassName: org.h2.Driver
    url: jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    spring:
      jpa:
        database-platform: org.hibernate.dialect.H2Dialect

logging:
  config: config-repo/logback.xml
